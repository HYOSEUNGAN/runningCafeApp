import React from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { useAuthStore } from '../../stores/useAuthStore';
import { ROUTES } from '../../constants/app';

/**
 * ÌïòÎã® GNB ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Ïª¥Ìè¨ÎÑåÌä∏
 * Figma ÎîîÏûêÏù∏Ïóê ÎßûÏ∂∞ Í≤ÄÏÉâ Ï†úÍ±∞, Ìôà/ÏßÄÎèÑ/ÎßàÏù¥ 3Í∞ú ÌÉ≠Îßå
 */
const BottomNavigation = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const { isAuthenticated } = useAuthStore();

  const navItems = [
    {
      id: 'home',
      label: 'Ìôà',
      icon: 'üè†',
      path: ROUTES.HOME,
      activeIcon: 'üè†',
    },
    {
      id: 'map',
      label: 'ÏßÄÎèÑ',
      icon: 'üó∫Ô∏è',
      path: ROUTES.MAP,
      activeIcon: 'üó∫Ô∏è',
    },
    {
      id: 'profile',
      label: 'ÎßàÏù¥',
      icon: 'üë§',
      path: ROUTES.PROFILE,
      activeIcon: 'üë§',
    },
  ];

  const handleNavigation = item => {
    if (item.requireAuth && !isAuthenticated()) {
      // Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌïú Í≤ΩÏö∞ Î°úÍ∑∏Ïù∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
      navigate(ROUTES.LOGIN);
      return;
    }
    navigate(item.path);
  };

  const isActive = path => {
    return location.pathname === path;
  };

  return (
    <nav className="fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-[390px] bg-white border-t border-gray-200 safe-area-bottom z-50">
      <div className="flex justify-around items-center h-16 px-4">
        {navItems.map(item => {
          const active = isActive(item.path);

          return (
            <button
              key={item.id}
              onClick={() => handleNavigation(item)}
              className={`flex flex-col items-center justify-center space-y-1 py-2 px-3 min-w-[50px] transition-colors ${
                active ? 'text-gray-800' : 'text-gray-400 hover:text-gray-600'
              }`}
              aria-label={item.label}
            >
              {/* ÏïÑÏù¥ÏΩò */}
              <div
                className={`w-8 h-8 rounded-full flex items-center justify-center ${
                  active ? 'bg-gray-600' : 'bg-gray-200'
                }`}
              >
                <span
                  className={`text-lg ${
                    active ? 'text-white' : 'text-gray-600'
                  }`}
                >
                  {active ? item.activeIcon : item.icon}
                </span>
              </div>

              {/* ÎùºÎ≤® */}
              <span
                className={`text-xs font-bold ${
                  active ? 'text-gray-800' : 'text-gray-400'
                }`}
              >
                {item.label}
              </span>
            </button>
          );
        })}
      </div>
    </nav>
  );
};

export default BottomNavigation;
